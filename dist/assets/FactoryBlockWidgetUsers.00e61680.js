import{a as n,j as e,A as x,b,R as k,D as p}from"./main.e8298863.js";import{S as h}from"./index.7d8e0d1b.js";import{W as v}from"./WidgetHeading1.0484d5c0.js";import{u as A}from"./useGutenbergSectionWithGQLGetUsers.e0106240.js";const S=({className:a="",author:l})=>{var i;const{name:s,username:d,uri:o,avatar:t,ncUserMeta:r}=l;return n("a",{href:frontendObject.homeURL+o,className:`nc-CardAuthor flex items-center ${a}`,"data-nc-id":"CardAuthor",children:[e(x,{sizeClass:"h-10 w-10 text-base",containerClassName:"flex-shrink-0 mr-4",radius:"rounded-full",imgUrl:((i=r==null?void 0:r.featuredImage)==null?void 0:i.sourceUrl)||(t==null?void 0:t.url),userName:d}),n("div",{children:[e("h4",{className:"text-base text-neutral-900 dark:text-neutral-100 font-semibold",children:s}),e("span",{className:"block mt-[2px] text-xs text-neutral-500 dark:text-neutral-400",children:r.ncBio})]})]})},C=({className:a=""})=>n("div",{className:`nc-CardAuthorSkeleton flex items-center ${a}`,"data-nc-id":"CardAuthorSkeleton",children:[e(x,{sizeClass:"h-10 w-10 text-base",containerClassName:"flex-shrink-0 mr-4",radius:"rounded-full",userName:"d"}),n("div",{className:"flex-grow",children:[e("h4",{className:"text-base text-neutral-900 dark:text-neutral-100 font-semibold",children:e(h,{width:"70%"})}),e("span",{className:"block mt-[2px] text-xs text-neutral-500 dark:text-neutral-400",children:e(h,{width:"40%"})})]})]}),y=({className:a="bg-neutral-100 dark:bg-neutral-800",authors:l,heading:s,isLoading:d,authorsLoading:o=[1,1,1,1]})=>n("div",{className:`nc-WidgetAuthors rounded-3xl overflow-hidden ${a}`,"data-nc-id":"WidgetAuthors",children:[s&&e(v,{title:s}),e("div",{className:"flow-root",children:e("div",{className:"flex flex-col divide-y divide-neutral-200 dark:divide-neutral-700",children:d?o.map((t,r)=>e(C,{className:"p-4 xl:p-5 hover:bg-neutral-200 dark:hover:bg-neutral-700"},r)):l.map((t,r)=>e(S,{className:"p-4 xl:p-5 hover:bg-neutral-200 dark:hover:bg-neutral-700",author:t.node},r))})})]}),G=({className:a="",domNode:l,apiSettings:s,sectionIndex:d})=>{const{graphQLvariables:o,graphQLData:t,settings:r,hasSSrInitData:i}=s,{funcGqlQueryGetUsers:f,IS_SKELETON:u,LISTS_DATA:c,error:g}=A({graphQLvariables:o,graphQLData:t,hasSSrInitData:i});let m=null;m=b(f,d).ref;const N=()=>n("div",{ref:m,children:[e(y,{authors:c,heading:r.heading,isLoading:u,authorsLoading:Array.from(Array(Number(r.expectedNumberResults||8)||8).keys())}),e(p,{className:"my-5",data:c,error:g,isSkeleton:u})]});return k.createPortal(N(),l)};export{G as default};
