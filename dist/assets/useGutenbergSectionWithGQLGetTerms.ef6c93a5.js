import{aj as A,ak as f,al as c,am as m}from"./main.85963571.js";import{g as O}from"./useQuery.02694860.js";import{u as q}from"./useLazyQuery.f1e3d5e8.js";function P({graphQLvariables:_,graphQLData:S}){var R,Y;const n=!_&&!!S;let G="";(_==null?void 0:_.queryString)==="GQL_QUERY_GET_CATEGORIES_BY_FILTER"&&(G=A),(_==null?void 0:_.queryString)==="GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC"&&(G=f),(_==null?void 0:_.queryString)==="GQL_QUERY_GET_TAGS_BY_FILTER"&&(G=c),(_==null?void 0:_.queryString)==="GQL_QUERY_GET_TAGS_BY_SPECIFIC"&&(G=m);const e=n?"":O`
        ${G}
      `;let E,t,T,I=()=>{};if(n)E=S;else{const[y,o]=q(e,{notifyOnNetworkStatusChange:!0,variables:_==null?void 0:_.variables});I=y,E=o.data,t=o.loading,T=o.error}const u=((R=E==null?void 0:E.tags)==null?void 0:R.edges)||((Y=E==null?void 0:E.categories)==null?void 0:Y.edges)||[],C=t&&!u.length;return{LIST_TERMS:u,IS_SKELETON:C,data:E,loading:t,error:T,funcGqlQueryGetTerms:I,DONOT_ANY_THING:!E&&!t&&!T}}export{P as u};
