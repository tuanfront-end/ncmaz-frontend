import{r as L,a as b,b as c,j as e}from"./main.85963571.js";import{B as x}from"./BackgroundSection.8495b948.js";import{S as N}from"./SectionGridCategoryBox.d40175a0.js";import{D as v}from"./DataStatementBlockV2.f13bb1a3.js";import{u as A}from"./useGqlQuerySection.603be7ff.js";import{u as D}from"./useGutenbergSectionWithGQLGetTerms.ef6c93a5.js";import"./CardCategory1Skeleton.7c5fd771.js";import"./NcImage.bea75434.js";import"./index.198f6b73.js";import"./CardCategory5Skeleton.401713e2.js";import"./Badge.29b60f9e.js";import"./Heading.7fcb7157.js";import"./NextPrev.2a5236bd.js";import"./EmptyState.a9cc8fa3.js";import"./useIntersectionObserver.e91dfa75.js";import"./useQuery.02694860.js";import"./useLazyQuery.f1e3d5e8.js";const z=({className:l="",domNode:p,apiSettings:d,sectionIndex:u})=>{const{graphQLvariables:t,graphQLData:o,settings:a}=d,g=!t&&!!o,{IS_SKELETON:s,LIST_TERMS:i,error:S,funcGqlQueryGetTerms:y}=D({graphQLvariables:t,graphQLData:o});let r=null;g?r=L.exports.useRef(null):r=A(y,u).ref;const f=()=>{const{hasBackground:C,subHeading:k,heading:G,termCardName:T,gridClass:h,gridClassCustom:m,blockLayoutStyle:B}=a,n=C;return c("div",{className:`nc-FactoryBlockTermsGrid relative  ${n?"py-16":""}  ${l}`,ref:r,children:[n&&e(x,{}),c("div",{className:"relative",children:[e(N,{categories:i,heading:G,subHeading:k,headingCenter:B==="layout-1",categoryCardType:T,gridClass:m||h,isLoadingSkeleton:s,isLoadingSkeletonArr:Array.from(Array(Number(a.expectedNumberResults||8)||8).keys())}),e(v,{data:i,isSkeleton:s,error:S})]})]})};return b.createPortal(f(),p)};export{z as default};
