import{Z as A,$ as c,a0 as f,a1 as q,a2 as F,a3 as U}from"./main.7162f953.js";function O({graphQLvariables:_,graphQLData:S}){var R,e;const n=!_&&!!S;let G="";(_==null?void 0:_.queryString)==="GQL_QUERY_GET_CATEGORIES_BY_FILTER"&&(G=f),(_==null?void 0:_.queryString)==="GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC"&&(G=q),(_==null?void 0:_.queryString)==="GQL_QUERY_GET_TAGS_BY_FILTER"&&(G=F),(_==null?void 0:_.queryString)==="GQL_QUERY_GET_TAGS_BY_SPECIFIC"&&(G=U);const Y=n?"":A`
        ${G}
      `;let E,t,I,u=()=>{};if(n)E=S;else{const[y,T]=c(Y,{notifyOnNetworkStatusChange:!0,variables:_==null?void 0:_.variables});u=y,E=T.data,t=T.loading,I=T.error}const o=((R=E==null?void 0:E.tags)==null?void 0:R.edges)||((e=E==null?void 0:E.categories)==null?void 0:e.edges)||[],C=t&&!o.length;return{LIST_TERMS:o,IS_SKELETON:C,data:E,loading:t,error:I,funcGqlQueryGetTerms:u}}export{O as u};
