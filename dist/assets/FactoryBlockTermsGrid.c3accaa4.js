import{r as L,a as b,b as c,j as e}from"./main.9a4c9a70.js";import{B as x}from"./BackgroundSection.0083cf1c.js";import{S as N}from"./SectionGridCategoryBox.33349e4a.js";import{D as v}from"./DataStatementBlockV2.49bfc0f5.js";import{u as A}from"./useGqlQuerySection.81610e2c.js";import{u as D}from"./useGutenbergSectionWithGQLGetTerms.c3bb7d59.js";import"./CardCategory1Skeleton.d681539a.js";import"./NcImage.775aecc9.js";import"./index.9e3c451e.js";import"./CardCategory5Skeleton.991d2314.js";import"./Badge.666f2391.js";import"./Heading.2623238b.js";import"./NextPrev.207788ff.js";import"./EmptyState.efe461be.js";import"./useIntersectionObserver.98765581.js";import"./useQuery.242ac0b5.js";import"./useLazyQuery.5ac1e84c.js";const z=({className:l="",domNode:p,apiSettings:d,sectionIndex:u})=>{const{graphQLvariables:t,graphQLData:o,settings:a}=d,g=!t&&!!o,{IS_SKELETON:s,LIST_TERMS:i,error:S,funcGqlQueryGetTerms:y}=D({graphQLvariables:t,graphQLData:o});let r=null;g?r=L.exports.useRef(null):r=A(y,u).ref;const f=()=>{const{hasBackground:C,subHeading:k,heading:G,termCardName:T,gridClass:h,gridClassCustom:m,blockLayoutStyle:B}=a,n=C;return c("div",{className:`nc-FactoryBlockTermsGrid relative  ${n?"py-16":""}  ${l}`,ref:r,children:[n&&e(x,{}),c("div",{className:"relative",children:[e(N,{categories:i,heading:G,subHeading:k,headingCenter:B==="layout-1",categoryCardType:T,gridClass:m||h,isLoadingSkeleton:s,isLoadingSkeletonArr:Array.from(Array(Number(a.expectedNumberResults||8)||8).keys())}),e(v,{data:i,isSkeleton:s,error:S})]})]})};return b.createPortal(f(),p)};export{z as default};
